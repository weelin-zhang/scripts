cluster.name: {{CLUSTERNAME}}                                 ####集群名
node.name: {NODENAME}}                                  ####节点名称
node.master: false                                        ####该节点是否可以被选举成为master主节点,默认可以
node.data: true                                             ####该节点是否可以用作数据节点，默认可以
node.max_local_storage_nodes: 1                             #####一个安装路径,启动一个节点
path.conf: /opt/yrd_soft/{{NODENAME}}/config                        ####设置配置文件的存储路径，默认是es根目录下的config文件夹
path.data: PATH1,PATH2,PATH3                                ####设置索引数据的存储路径，默认是es根目录下的data文件夹，可以设置多个存储路径，用逗号隔开
path.logs: /opt/yrd_logs/{{NODENAME}}                      ####设置日志文件的存储路径，默认是es根目录下的logs文件夹
#path.plugins: /path/to/plugins                             ####设置插件的存放路径，默认是es根目录下的plugins文件夹
network.bind_host: {{IP}}                             ####绑定ip
network.publish_host: {{IP}}                          ####设置其它节点和该节点交互的ip地址，如果不设置它会自动判断，值必须是个真实的ip地址。
network.host: {{IP}}                                  ####这个参数是用来同时设置bind_host和publish_host上面两个参数
transport.tcp.port: {{transport}}                                    ####设置节点间交互的tcp端口，默认是9300。
transport.tcp.compress: true                                ####设置是否压缩tcp传输时的数据，默认为false，不压缩。
http.port: {{httpport}}                                              ####设置对外服务的http端口，默认为9200
http.max_content_length: 100mb                              ####http请求最大值,默认100M  
http.enabled: true                                          ####是否使用http协议对外提供服务，默认为true，开启
#gateway.type: max_local_storage_nodes                      ####gateway的类型，默认为local即为本地文件系统，可以设置为本地文件系统，分布式文件系统，hadoop的HDFS，和amazon的s3服务器
gateway.recover_after_nodes: 10                              ####该参数控制集群在达到多少个节点的规模后，才开始数据恢复任务。这样可以避免集群自动发现的初期，分片不全的问题
gateway.recover_after_time: 5m                              ####该参数控制集群在达到上条配置设置的节点规模后，再等待多久才开始数据恢复任务
gateway.expected_nodes: 14                                   ####该参数设置集群的预期节点总数。在达到这个总数后，即认为集群节点已经完全加载，即可开始数据恢复，不用再等待上条设置的时间

cluster.routing.allocation.disk.watermark.low: 90%          ####当某一节点磁盘用量达到90%时，将无法在该节点创建新的分片,默认85%
cluster.routing.allocation.disk.watermark.high: 90%         ####当某一node的disk用量超过90%时,分片会自动迁移到其它节点，默认90%
cluster.routing.allocation.node_initial_primaries_recoveries: 4   ####初始化数据恢复时，并发恢复线程的个数，默认为4
cluster.routing.allocation.node_concurrent_recoveries: 2          ####添加删除节点或负载均衡时并发恢复线程的个数，默认为4
indices.recovery.max_bytes_per_sec: 0
discovery.zen.minimum_master_nodes: 3                             ####设置这个参数来保证集群中的节点可以知道其它N个有master资格的节点。默认为1，对于大的集群来说，可以设置大一点的值（2-4）
discovery.zen.ping_timeout: 3s                                    ####设置集群中自动发现其它节点时ping连接超时时间，默认为3秒，对于比较差的网络环境可以高点的值来防止自动发现时出错
discovery.zen.ping.unicast.hosts: ["10.134.82.11:9300", "10.134.82.11:9301", "10.134.82.12:9300", "10.134.82.12:9301", "10.134.82.13:9300", "10.134.82.13:9301","10.134.82.14:9300", "10.134.82.14:9301","10.134.82.15:9300","10.134.82.15:9301","10.134.82.15:9302","10.134.82.16:9300","10.134.82.16:9301","10.134.82.16:9302"]
action.destructive_requires_name: true #为了防止误删除，设置参数
